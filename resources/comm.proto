option optimize_for = SPEED;
option java_package = "eye";

message Finger {
required int32 number = 1;
required string tag = 2;
}

message NameSpace {
// internally created or supplied by caller
required string user_id = 1;
required string name = 2;
required string city = 3;
required string zip_code = 4;
required string password = 5;
}

message LoginInfo {
required string user_id = 1;
required string password = 2;
}

message Point {
required double x = 1;
required double y = 2;
}

message QueryNamespace {
optional string user_id = 1;
optional string name = 2;
optional string city = 3;
optional string zip_code = 4;
}

message QueryInfo {
optional string user_id = 1;
required Point location = 2;
optional string name = 3;
optional int64 time = 4;
optional string desc = 5;
}

message NameValueSet {
required NodeType node_type = 1;
    optional string name = 2;
    optional string value = 3;
    repeated NameValueSet node = 4;
    enum NodeType {
     NODE = 1;
     VALUE = 2;
    }
}

message Document {
    required string name_space = 1;
    optional int64 id = 2;
    required bytes img_byte = 3;
required Point location = 4;
optional string file_name =5;
optional string file_type = 6;
optional int64 time = 7;
// repeated NameValueSet document = 8;
}

message DocumentSet {
repeated Document documents = 1;
}

message NameSpaceSet {
repeated NameSpace spaces = 1;
}

message Header {
    required Routing routing_id = 2;
    required string originator = 3;
    required string tag = 4;
    optional int64 time = 5;
    
    // while we can use extensions, it is not a clean
    // inheritance implementation and since requests
    // and responses differ only by these two fields,
    // a new message is not created.
    optional ReplyStatus reply_code = 6;
    optional string reply_msg = 7;
    
    enum Routing {
        FINGER = 2;
        STATS = 3;
        NAMESPACEADD = 10;
        NAMESPACELIST = 11;
        NAMESPACEUPDATE = 12;
        NAMESPACEREMOVE =13;
        DOCADD = 20;
        DOCFIND = 21;
        DOCUPDATE = 22;
        DOCREMOVE = 23;
        }
        
     enum ReplyStatus {
      SUCCESS = 1;
      FAILURE = 2;
      NOAUTH = 3;
      MISSINGARG = 4;
      NOCONNECTION = 5;
      }
}

message Payload {
    optional Finger finger = 1;
    optional Document doc = 2;
    optional NameSpace space = 3;
    optional QueryInfo query = 4;
	optional QueryNamespace queryUser = 5;
	
}

message PayloadReply {
    repeated Document docs = 1;
    repeated NameSpace spaces = 2;
    optional Document stats = 3; //To be reviewed
    optional Document finger = 4; //To be reviewed
}

message Request {
    required Header header = 1;
    required Payload body = 2;
}

message Response {
    required Header header = 1;
optional PayloadReply body = 2;
}

message Heartbeat {
required string nodeId = 1;
required int64 timeRef = 2;
}

message Network {
required string nodeId = 1;
required Action action = 2;

enum Action {
NODEJOIN = 1;
NODELEAVE = 2;
NODEDEAD = 3;
MAP = 55;
ANNOUNCE = 56;
SHUTDOWN = 999;
}
}

message Management {
optional Network graph = 1;
optional Heartbeat beat = 2;
} 
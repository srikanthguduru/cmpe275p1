<?xml version="1.0"?>
<project xmlns:ivy="antlib:org.apache.ivy.ant" name="LifeStream" basedir="." default="build">

	<target name="resolve" depends="init">
		<ivy:retrieve pattern="${lib.dir}/[module]-[type]-[artifact]-[revision].[ext]" />
	</target>

	<target name="init">
		<property name="lib.dir" location="${basedir}/lib" />
		<property name="src.dir" location="${basedir}/src" />
		<property name="generated.dir" location="${basedir}/generated" />
		<property name="test.dir" location="${basedir}/test" />
		<property name="build.dir" location="${basedir}/classes" />
		<property name="config.dir" location="${basedir}/resources" />
		<property name="jpa.dir" location="${basedir}/config" />
	
		<path id="project.classpath">
			<pathelement location="${build.dir}" />
			<fileset dir="${lib.dir}">
				<include name="**/*.jar" />
			</fileset>
		</path>
	</target>

	<target name="clean" depends="init">
		<delete dir="${build.dir}" />
		<echo>Note: protobuf generated .java are not removed. Changes to data.proto require build_pb.sh</echo>
	</target>

	<target name="build" depends="clean">
		<mkdir dir="${build.dir}" />

		<javac destdir="${build.dir}" debug="true" deprecation="false" optimize="false" failonerror="true">
			<src path="${generated.dir}" />
			<classpath refid="project.classpath" />
		</javac>

		<javac destdir="${build.dir}" debug="true" deprecation="false" optimize="false" failonerror="true">
			<src path="${src.dir}" />
			<classpath refid="project.classpath" />
		</javac>
		<copy todir="${build.dir}">
      		<fileset dir="${jpa.dir}">
        	<include name="**/*.*"/>
     		</fileset>
    </copy>
	</target>

	<target name="build.test" depends="build">
		<javac destdir="${build.dir}" debug="true" deprecation="false" optimize="false" failonerror="true">
			<src path="${test.dir}" />
			<classpath refid="project.classpath" />
		</javac>
	</target>

	<!-- ================================================================= -->

	<target name="client" depends="init">
		<property name="user" value="Sugandhi"/>
		<property name="server" value="localhost"/>
		<property name="port" value="5570"/>
		<property name="request" value="3"/>
		<java fork="yes" classname="poke.demo.Jab">
			<classpath refid="project.classpath" />
			<arg value="${user}" />
			<arg value="${server}" />
			<arg value="${port}" />
			<arg value="${request}" />
		</java>
	</target>
	

	<target name="monitor" depends="init">
		<java fork="yes" classname="poke.demo.Monitor">
			<classpath refid="project.classpath" />
		</java>
	</target>

	<target name="server" depends="build">
		<java fork="yes" maxmemory="1024m" classname="poke.server.Server">
			<arg value="${basedir}/runtime/server.conf" />
			<classpath refid="project.classpath" />
		</java>
	</target>
	
	<target name="test" depends="init" >

	  <junit printsummary="withOutAndErr" haltonfailure="yes" fork = "true"  forkmode ="perTest">
	  	<classpath refid="project.classpath" />
	  	<formatter type="brief" usefile="false" />
	    <test name="poke.server.conf.ServerConfTest">

	    </test>

	  </junit>
	</target>


</project>
